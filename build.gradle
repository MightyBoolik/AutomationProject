plugins {
    id 'java'
    id "io.qameta.allure" version "2.8.1"
    id "io.freefair.lombok" version "5.3.0"
}

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

def allureVersion = "2.13.8",
    selenideVersion = "5.19.0",
    junitVersion = "5.7.1"

allure {
    autoconfigure = true
    aspectjweaver = true
    version = "$allureVersion"
    useJUnit5 {
        version = "$allureVersion"
    }
}

dependencies {
    compile("org.aspectj:aspectjweaver:1.9.6")
    compile("com.codeborne:selenide:$selenideVersion")
    compile("io.qameta.allure:allure-java-commons:$allureVersion")
    compile("io.qameta.allure:allure-selenide:$allureVersion")
    compile("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    compile("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
    compile("org.junit.jupiter:junit-jupiter-params:$junitVersion")
    compile("org.assertj:assertj-core:3.6.1")
    compile("com.fasterxml.jackson.core:jackson-databind:2.12.2")
    compile("org.aeonbits.owner:owner:1.0.4")
    compile("org.apache.httpcomponents:httpclient:4.5.3")
    compile("org.apache.httpcomponents:fluent-hc:4.5.3")
    compile("com.github.pengrad:java-telegram-bot-api:5.1.0")
}

tasks.withType(Test) {
    systemProperties += System.properties
}

test {
    useJUnitPlatform()
    systemProperties(System.getProperties())
}

task sendAllureResults(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.amdocs.core.notifications.Sender'
    systemProperty "jenkins.build.number", System.getProperty("jenkins.build.number")
    systemProperty "jenkins.job.url", System.getProperty("jenkins.job.url")
}

task runWebTests(type: Test) {
    useJUnitPlatform {
        includeTags 'web'
    }
}